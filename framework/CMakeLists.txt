CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(Framework)

# - Find packages we need
FIND_PACKAGE(PkgConfig REQUIRED)
FIND_PACKAGE(OpenCL REQUIRED)
FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(GLEW REQUIRED)
#FIND_PACKAGE(GLM REQUIRED)
PKG_SEARCH_MODULE(GLFW REQUIRED glfw3)
IF(APPLE)
	FIND_LIBRARY(COCOA_LIBRARY Cocoa)
	FIND_LIBRARY(IOKIT_LIBRARY IOKit)
ENDIF()

IF(NOT LIBRARY_OUTPUT_PATH)
	SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
ENDIF(NOT LIBRARY_OUTPUT_PATH)

INCLUDE_DIRECTORIES(
	${FRAMEWORK_INCLUDE_DIR}
	${GLFW_INCLUDE_DIRS}
	${GLEW_INCLUDE_DIR}
	${OPENCL_INCLUDE_DIR}
	${CMAKE_CURRENT_BINARY_DIR})


SET(cl_srcs "") 
FILE(GLOB framework_vcl kernels/*.cl)
FOREACH(filename ${framework_vcl})
    GET_FILENAME_COMPONENT(target ${filename} NAME_WE)
    SET(name "${CMAKE_CURRENT_SOURCE_DIR}/include/cl_src/${target}.h")
    SET(cl_srcs ${cl_srcs} ${name})
	GET_TARGET_PROPERTY(TXT_TO_H_EXE TxtToH LOCATION)
	ADD_CUSTOM_COMMAND(
	  OUTPUT ${name}
		COMMAND ${TXT_TO_H_EXE} ${filename} ${name}
	  DEPENDS TxtToH ${filename}
	)
ENDFOREACH(filename ${framework_vcl})

FILE(GLOB FRAMEWORK_SRC "src/*.cpp")
ADD_LIBRARY (Framework SHARED ${FRAMEWORK_SRC} ${cl_srcs})
TARGET_LINK_LIBRARIES(Framework
	${OPENGL_LIBRARIES}
	${OPENCL_LIBRARIES}
	${GLEW_LIBRARIES}
	${GLEWMX_LIBRARIES}
	${GLFW_STATIC_LIBRARIES})
IF(APPLE)
	TARGET_LINK_LIBRARIES(Framework
		${COCOA_LIBRARY}
		${IOKIT_LIBRARY})
ENDIF()
SET_TARGET_PROPERTIES(Framework PROPERTIES DEBUG_POSTFIX "d")
INSTALL(TARGETS Framework DESTINATION framework/lib)

ADD_LIBRARY (Framework_s STATIC ${FRAMEWORK_SRC} ${cl_srcs})
TARGET_LINK_LIBRARIES(Framework_s
	${OPENGL_LIBRARIES}
	${OPENCL_LIBRARIES}
	${GLEW_LIBRARIES}
	${GLEWMX_LIBRARIES}
	${GLFW_STATIC_LIBRARIES})
IF(APPLE)
	TARGET_LINK_LIBRARIES(Framework_s
		${COCOA_LIBRARY}
		${IOKIT_LIBRARY})
ENDIF()
SET_TARGET_PROPERTIES(Framework_s PROPERTIES OUTPUT_NAME Framework)
SET_TARGET_PROPERTIES(Framework_s PROPERTIES DEBUG_POSTFIX "d")
INSTALL(TARGETS Framework_s DESTINATION framework/lib)
